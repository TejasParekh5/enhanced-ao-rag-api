[
  {
    "test_name": "suggestions_basic",
    "endpoint": "/suggestions",
    "method": "POST",
    "body": {},
    "description": "Basic suggestions endpoint test"
  },
  {
    "test_name": "assistant_basic_query",
    "endpoint": "/assistant",
    "method": "POST",
    "body": {
      "query": "Show me all application owners",
      "use_llm": false
    },
    "description": "Basic AO query without LLM enhancement"
  },
  {
    "test_name": "assistant_vulnerability_query",
    "endpoint": "/assistant",
    "method": "POST",
    "body": {
      "query": "Find AOs with high vulnerabilities",
      "use_llm": false
    },
    "description": "Query for high vulnerability AOs"
  },
  {
    "test_name": "assistant_production_query",
    "endpoint": "/assistant",
    "method": "POST",
    "body": {
      "query": "Show me application owners in production environment",
      "use_llm": false
    },
    "description": "Query for production environment AOs"
  },
  {
    "test_name": "assistant_critical_apps_query",
    "endpoint": "/assistant",
    "method": "POST",
    "body": {
      "query": "Who are the AOs with critical applications?",
      "use_llm": false
    },
    "description": "Query for critical application AOs"
  },
  {
    "test_name": "assistant_compliance_query",
    "endpoint": "/assistant",
    "method": "POST",
    "body": {
      "query": "Show me AOs with poor compliance scores",
      "use_llm": false
    },
    "description": "Query for poor compliance AOs"
  },
  {
    "test_name": "assistant_enhanced_query",
    "endpoint": "/assistant",
    "method": "POST",
    "body": {
      "query": "Analyze the security posture of AOs with critical vulnerabilities",
      "use_llm": true
    },
    "description": "Enhanced vulnerability analysis with LLM"
  },
  {
    "test_name": "chat_sql_injection",
    "endpoint": "/chat",
    "method": "POST",
    "body": {
      "vulnerability_name": "SQL Injection",
      "description": "A code injection technique where malicious SQL statements are inserted into application queries"
    },
    "description": "Chat about SQL Injection vulnerability"
  },
  {
    "test_name": "chat_xss",
    "endpoint": "/chat",
    "method": "POST",
    "body": {
      "vulnerability_name": "Cross-Site Scripting",
      "description": "A type of injection where malicious scripts are injected into trusted websites"
    },
    "description": "Chat about XSS vulnerability"
  },
  {
    "test_name": "chat_csrf",
    "endpoint": "/chat",
    "method": "POST",
    "body": {
      "vulnerability_name": "Cross-Site Request Forgery",
      "description": "An attack that forces an end user to execute unwanted actions on a web application"
    },
    "description": "Chat about CSRF vulnerability"
  },  {
    "test_name": "chat_with_code",
    "endpoint": "/chat",
    "method": "POST",
    "body": {
      "vulnerability_name": "SQL Injection",
      "risk_rating": "High",
      "code_snippet": "SELECT * FROM users WHERE username = '\" + userInput + \"' AND password = '\" + passwordInput + \"'"
    },
    "description": "Chat about SQL Injection with code snippet"
  }
]
