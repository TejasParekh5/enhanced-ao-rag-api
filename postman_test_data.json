{
    "ao_names": [
        "Alice Singh",
        "Deepa Nair",
        "Pooja Reddy",
        "Nisha Sharma",
        "Lata Menon",
        "Sneha Joshi",
        "Sonal Desai",
        "Priya Kapoor"
    ],
    "sample_queries": [
        "What are the main security risks for this AO?",
        "What should I prioritize first?",
        "How can I improve compliance scores?",
        "What are the critical vulnerabilities?",
        "Show me the risk assessment details",
        "What immediate actions are needed?",
        "How does this AO compare to others?",
        "What is the overall security posture?",
        "Provide comprehensive security analysis",
        "Give me actionable recommendations",
        "What are the compliance requirements?",
        "How can I reduce risk exposure?"
    ],
    "search_queries": [
        "high risk applications",
        "critical vulnerabilities",
        "Identity Access Management",
        "security architecture",
        "compliance",
        "incident response",
        "vulnerability management",
        "governance risk"
    ],
    "test_scenarios": {
        "valid_ao_with_llm": {
            "endpoint": "/suggestions",
            "method": "POST",
            "body": {
                "ao_name": "Alice Singh",
                "use_llm": true
            },
            "description": "Test suggestions endpoint with LLM analysis for valid AO"
        },
        "valid_ao_without_llm": {
            "endpoint": "/suggestions",
            "method": "POST",
            "body": {
                "ao_name": "Deepa Nair",
                "use_llm": false
            },
            "description": "Test suggestions endpoint without LLM (still uses LLM in current implementation)"
        },
        "invalid_ao": {
            "endpoint": "/suggestions",
            "method": "POST",
            "body": {
                "ao_name": "Invalid Name"
            },
            "description": "Test error handling for non-existent AO"
        },
        "empty_ao_name": {
            "endpoint": "/suggestions",
            "method": "POST",
            "body": {
                "ao_name": ""
            },
            "description": "Test validation for empty AO name"
        },
        "missing_ao_name": {
            "endpoint": "/suggestions",
            "method": "POST",
            "body": {},
            "description": "Test validation for missing AO name parameter"
        },
        "high_risk_search": {
            "endpoint": "/search",
            "method": "POST",
            "body": {
                "query": "high risk applications",
                "top_k": 5
            },
            "description": "Test search for high risk applications with LLM analysis"
        },
        "department_search": {
            "endpoint": "/search",
            "method": "POST",
            "body": {
                "query": "Identity Access Management",
                "top_k": 10
            },
            "description": "Test search by department with LLM analysis"
        },
        "vulnerability_search": {
            "endpoint": "/search",
            "method": "POST",
            "body": {
                "query": "critical vulnerabilities",
                "top_k": 3
            },
            "description": "Test search for critical vulnerabilities with LLM analysis"
        },
        "empty_search_query": {
            "endpoint": "/search",
            "method": "POST",
            "body": {
                "query": ""
            },
            "description": "Test validation for empty search query"
        },
        "missing_search_query": {
            "endpoint": "/search",
            "method": "POST",
            "body": {},
            "description": "Test validation for missing search query"
        },
        "health_check": {
            "endpoint": "/health",
            "method": "GET",
            "description": "Test system health status"
        },
        "system_stats": {
            "endpoint": "/stats",
            "method": "GET",
            "description": "Test system statistics endpoint"
        }
    },
    "expected_responses": {
        "suggestions_success": {
            "success": true,
            "suggestions": {
                "status": "ao_found",
                "match_type": "exact",
                "ao_profile": {
                    "ao_name": "string",
                    "applications": "array",
                    "department": "string",
                    "risk_score": "string",
                    "compliance_score": "string",
                    "vulnerability_count": "string",
                    "criticality": "string",
                    "environment": "string"
                },
                "ai_analysis": "string (LLM-generated structured analysis)",
                "ai_enhanced": true,
                "generation_timestamp": "string"
            },
            "timestamp": "string"
        },
        "suggestions_ao_not_found": {
            "success": true,
            "suggestions": {
                "status": "ao_not_found",
                "searched_ao": "string",
                "message": "string",
                "similar_ao_names": "array",
                "suggestions": "array"
            }
        },
        "suggestions_error": {
            "success": false,
            "error": "string",
            "available_aos": "array (when ao_name is missing)"
        },
        "search_success": {
            "success": true,
            "query": "string",
            "ai_analysis": "string (LLM-generated analysis of search results)",
            "matching_aos": "array of simplified AO objects",
            "total_found": "number",
            "ai_enhanced": true,
            "timestamp": "string"
        },
        "search_error": {
            "success": false,
            "error": "string",
            "example": {
                "query": "string"
            }
        },
        "stats_success": {
            "success": true,
            "statistics": {
                "total_aos": "number",
                "total_applications": "number",
                "avg_risk_score": "number",
                "high_risk_aos": "number",
                "last_updated": "string"
            },
            "timestamp": "string"
        },
        "health_success": {
            "status": "healthy",
            "system_initialized": true,
            "timestamp": "string",
            "version": "string"
        }
    },
    "performance_benchmarks": {
        "health_check": "< 200ms",
        "stats": "< 300ms",
        "search": "< 5s (with LLM analysis)",
        "suggestions": "< 8s (always uses LLM now)"
    },
    "usage_tips": [
        "Always start with a health check to ensure the system is running",
        "Use stats endpoint to get an overview of the data",
        "Search endpoint now provides LLM analysis of matching results",
        "Suggestions endpoint always uses LLM for comprehensive analysis",
        "Both search and suggestions now return AI-enhanced responses",
        "Use top_k parameter in search to control the number of results analyzed",
        "Invalid AO names will return helpful suggestions for correction",
        "Responses are now more concise with essential data + LLM analysis",
        "LLM responses are structured with clear sections for easy reading"
    ],
    "example_requests": {
        "suggestions_request": {
            "url": "http://localhost:5001/suggestions",
            "method": "POST",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {
                "ao_name": "Alice Singh"
            }
        },
        "search_request": {
            "url": "http://localhost:5001/search",
            "method": "POST",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {
                "query": "high risk applications",
                "top_k": 5
            }
        },
        "stats_request": {
            "url": "http://localhost:5001/stats",
            "method": "GET"
        },
        "health_request": {
            "url": "http://localhost:5001/health",
            "method": "GET"
        }
    }
}